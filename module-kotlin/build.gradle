if (isModulekotlin){
    apply plugin: 'com.android.application'
}else{
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    implementation project(':base')
    kapt project(':arouter-compiler')
//    kapt project(':arouter-compiler')
    implementation "com.android.support:appcompat-v7:${SUPPORT_LIB_VERSION}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    if(isModulekotlin&&!isModuleJava){
        implementation project(':module-java')
    }
}
android {
    compileSdkVersion Integer.parseInt(COMPILE_SDK_VERSION)
    buildToolsVersion BUILDTOOLS_VERSION

    defaultConfig {
        minSdkVersion Integer.parseInt(MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(TARGET_SDK_VERSION)

        //添加一条 boolean类型的变量
        buildConfigField("boolean","isModule",String.valueOf(isModulekotlin))
        //组件模式下
        if (isModulekotlin&&isModuleJava){
            applicationId appId['kotlinModule']
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
            }
        }
        packagingOptions {
            pickFirst 'META-INF'
        }
        //资源配置
        sourceSets{
            main{
                //在组件模式下 使用不同的manifest文件
                if(isModulekotlin){
                    manifest.srcFile 'src/main/module/AndroidManifest.xml'
                    java.srcDirs 'src/main/module/java','src/main/java'
                }else{
                    manifest.srcFile 'src/main/AndroidManifest.xml'
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        lintOptions { abortOnError false }
    }
}